using System.Diagnostics;
using System.IO;

using Maple.Domain;

namespace Maple.Core
{
    /// <summary>
    ///
    /// </summary>
    /// <seealso cref="Maple.Core.MapleFileSystemContainerBase" />
    /// <seealso cref="Maple.Core.IFileSystemDrive" />
    /// <autogeneratedoc />
    [DebuggerDisplay("Drive: {Name} IsContainer: {IsContainer}")]
    public class MapleDrive : MapleFileSystemContainerBase, IFileSystemDrive
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MapleDrive"/> class.
        /// </summary>
        /// <param name="info">The information.</param>
        /// <param name="depth">The depth.</param>
        /// <autogeneratedoc />
        public MapleDrive(DriveInfo info, IDepth depth, IMessenger messenger, ILoggingService loggingService)
            : base(info.Name, info.Name, depth, null, messenger, loggingService)
        {
            using (BusyStack.GetToken())
            {
                if (!Depth.IsMaxReached)
                    Refresh();
            }
        }

        /// <summary>
        /// Loads the meta data.
        /// </summary>
        /// <autogeneratedoc />
        public override void LoadMetaData()
        {
        }

        /// <summary>
        /// Deletes this instance.
        /// </summary>
        /// <autogeneratedoc />
        public override void Delete()
        {
        }

        /// <summary>
        /// Determines whether this instance can delete.
        /// </summary>
        /// <returns>
        ///   <c>true</c> if this instance can delete; otherwise, <c>false</c>.
        /// </returns>
        /// <autogeneratedoc />
        public override bool CanDelete()
        {
            return false;
        }
    }
}
